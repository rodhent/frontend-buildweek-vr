{"ast":null,"code":"import axiosWithAuth from '../utils/axiosWithAuth';\nimport axios from 'axios'; //login\n\nexport const LOGIN_START = 'LOGIN_START';\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\nexport const LOGIN_FAILURE = 'LOGIN_FAILURE';\nexport const login = action => dispatch => {\n  dispatch({\n    type: LOGIN_START\n  });\n  console.log(action);\n  return axiosWithAuth().post('https://kick-starter-clone.herokuapp.com/api/auth/login', action.newUser).then(res => {\n    localStorage.setItem('token', res.data.token);\n    localStorage.setItem('id', res.data.id);\n    dispatch({\n      type: LOGIN_SUCCESS,\n      payload: res.data\n    });\n    action.history.push('/dashboard');\n  }).catch(err => {\n    console.log(err);\n    dispatch({\n      type: LOGIN_FAILURE,\n      payload: err.message\n    });\n  });\n}; // signup\n\nexport const SIGNUP_START = 'SIGNUP_START';\nexport const SIGNUP_SUCCESS = 'SIGNUP_SUCCESS';\nexport const SIGNUP_FAILURE = 'SIGNUP_FAILURE';\nexport const signup = user => dispatch => {\n  dispatch({\n    type: SIGNUP_START\n  });\n  return axios.post('https://kick-starter-clone.herokuapp.com/api/auth/register', user).then(res => {\n    dispatch({\n      type: SIGNUP_SUCCESS,\n      payload: res.data\n    });\n  }).catch(err => {\n    dispatch({\n      type: SIGNUP_FAILURE,\n      payload: err.message\n    });\n  });\n}; // add project\n\nexport const ADD_PROJECT_START = 'ADD_PROJECT_START';\nexport const ADD_PROJECT_SUCCESS = 'ADD_PROJECT_SUCCESS';\nexport const ADD_PROJECT_FAILURE = 'ADD_PROJECT_FAILURE';\nexport const addProj = project => dispatch => {\n  dispatch({\n    type: ADD_PROJECT_START\n  });\n  console.log(project);\n  return axiosWithAuth().post('https://kick-starter-clone.herokuapp.com/api/projects/add', project).then(res => {\n    dispatch({\n      type: ADD_PROJECT_SUCCESS,\n      payload: res.data\n    });\n  }).catch(err => {\n    dispatch({\n      type: ADD_PROJECT_FAILURE,\n      payload: err.message\n    });\n  });\n}; // fetch project\n\nexport const FETCH_PROJECT_START = 'FETCH_PROJECT_START';\nexport const FETCH_PROJECT_SUCCESS = 'FETCH_PROJECT_SUCCESS';\nexport const FETCH_PROJECT_FAILURE = 'FETCH_PROJECT_FAILURE';\nexport const fetchProjects = () => dispatch => {\n  dispatch({\n    type: FETCH_PROJECT_START\n  });\n  return axiosWithAuth().get('https://kick-starter-clone.herokuapp.com/api/projects').then(res => {\n    dispatch({\n      type: FETCH_PROJECT_SUCCESS,\n      payload: res.data.data\n    });\n  }).catch(err => {\n    dispatch({\n      type: FETCH_PROJECT_FAILURE,\n      payload: err.message\n    });\n  });\n}; // fetch project by id\n\nexport const FETCH_PROJECT_ID_START = 'FETCH_PROJECT_ID_START';\nexport const FETCH_PROJECT_ID_SUCCESS = 'FETCH_PROJECT_ID_SUCCESS';\nexport const FETCH_PROJECT_ID_FAILURE = 'FETCH_PROJECT_ID_FAILURE';\nexport const fetchProjectID = id => dispatch => {\n  dispatch({\n    type: FETCH_PROJECT_ID_START\n  });\n  return axiosWithAuth().get(`https://kick-starter-clone.herokuapp.com/api/projects/${id}`).then(res => {\n    dispatch({\n      type: FETCH_PROJECT_ID_SUCCESS,\n      payload: res.data\n    });\n  }).catch(err => {\n    dispatch({\n      type: FETCH_PROJECT_ID_FAILURE,\n      payload: err.message\n    });\n  });\n}; // edit project by id\n\nexport const EDIT_PROJECT_START = 'EDIT_PROJECT_START';\nexport const EDIT_PROJECT_SUCCESS = 'EDIT_PROJECT_SUCCESS';\nexport const EDIT_PROJECT_FAILURE = 'EDIT_PROJECT_FAILURE';\nexport const editProject = project => dispatch => {\n  dispatch({\n    type: EDIT_PROJECT_START\n  });\n  return axiosWithAuth().put(`https://kick-starter-clone.herokuapp.com/api/projects/${project.id}`, project).then(res => {\n    dispatch({\n      type: EDIT_PROJECT_SUCCESS,\n      payload: res.data\n    });\n  }).catch(err => {\n    dispatch({\n      type: EDIT_PROJECT_FAILURE,\n      payload: err.message\n    });\n  });\n};","map":{"version":3,"sources":["/Users/nova/Documents/lambda/front-end/src/actions/index.js"],"names":["axiosWithAuth","axios","LOGIN_START","LOGIN_SUCCESS","LOGIN_FAILURE","login","action","dispatch","type","console","log","post","newUser","then","res","localStorage","setItem","data","token","id","payload","history","push","catch","err","message","SIGNUP_START","SIGNUP_SUCCESS","SIGNUP_FAILURE","signup","user","ADD_PROJECT_START","ADD_PROJECT_SUCCESS","ADD_PROJECT_FAILURE","addProj","project","FETCH_PROJECT_START","FETCH_PROJECT_SUCCESS","FETCH_PROJECT_FAILURE","fetchProjects","get","FETCH_PROJECT_ID_START","FETCH_PROJECT_ID_SUCCESS","FETCH_PROJECT_ID_FAILURE","fetchProjectID","EDIT_PROJECT_START","EDIT_PROJECT_SUCCESS","EDIT_PROJECT_FAILURE","editProject","put"],"mappings":"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","sourcesContent":["import axiosWithAuth from '../utils/axiosWithAuth'\nimport axios from 'axios'\n\n\n//login\n\nexport const LOGIN_START = 'LOGIN_START'\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS'\nexport const LOGIN_FAILURE = 'LOGIN_FAILURE'\n\nexport const login = (action) => (dispatch) =>{\n    dispatch({type:LOGIN_START})\n    console.log(action)\n    return axiosWithAuth()\n    .post('https://kick-starter-clone.herokuapp.com/api/auth/login', action.newUser)\n    .then((res) => {\n        localStorage.setItem('token', res.data.token)\n        localStorage.setItem('id', res.data.id)\n        dispatch({type: LOGIN_SUCCESS, payload: res.data})\n        action.history.push('/dashboard')\n    })\n    .catch((err) => {\n        console.log(err)\n        dispatch({type: LOGIN_FAILURE, payload: err.message})\n    })\n}\n\n\n// signup\n\nexport const SIGNUP_START = 'SIGNUP_START'\nexport const SIGNUP_SUCCESS = 'SIGNUP_SUCCESS'\nexport const SIGNUP_FAILURE = 'SIGNUP_FAILURE'\n\nexport const signup = (user) => (dispatch) => {\n    dispatch({type: SIGNUP_START})\n    return axios\n    .post('https://kick-starter-clone.herokuapp.com/api/auth/register', user)\n    .then((res) => {\n        dispatch({type: SIGNUP_SUCCESS, payload: res.data})\n    })\n    .catch((err) => {\n        dispatch({type: SIGNUP_FAILURE, payload: err.message})\n    })\n}\n\n// add project\n\nexport const ADD_PROJECT_START = 'ADD_PROJECT_START'\nexport const ADD_PROJECT_SUCCESS = 'ADD_PROJECT_SUCCESS'\nexport const ADD_PROJECT_FAILURE = 'ADD_PROJECT_FAILURE'\n\nexport const addProj = (project) => (dispatch) => {\n    dispatch({type: ADD_PROJECT_START})\n    console.log(project)\n    return axiosWithAuth()\n    .post('https://kick-starter-clone.herokuapp.com/api/projects/add', project)\n    .then((res) => {\n        dispatch({type: ADD_PROJECT_SUCCESS, payload: res.data})\n    })\n    .catch((err) => {\n        dispatch({type: ADD_PROJECT_FAILURE, payload: err.message})\n    })\n}\n\n// fetch project\n\nexport const FETCH_PROJECT_START = 'FETCH_PROJECT_START'\nexport const FETCH_PROJECT_SUCCESS = 'FETCH_PROJECT_SUCCESS'\nexport const FETCH_PROJECT_FAILURE = 'FETCH_PROJECT_FAILURE'\n\nexport const fetchProjects = () => (dispatch) => {\n    dispatch({type: FETCH_PROJECT_START})\n    return axiosWithAuth()\n    .get('https://kick-starter-clone.herokuapp.com/api/projects')\n    .then((res) => {\n        dispatch({type: FETCH_PROJECT_SUCCESS, payload: res.data.data})\n    })\n    .catch((err) => {\n        dispatch({type: FETCH_PROJECT_FAILURE, payload: err.message})\n    })\n}\n\n// fetch project by id\n\nexport const FETCH_PROJECT_ID_START = 'FETCH_PROJECT_ID_START'\nexport const FETCH_PROJECT_ID_SUCCESS = 'FETCH_PROJECT_ID_SUCCESS'\nexport const FETCH_PROJECT_ID_FAILURE = 'FETCH_PROJECT_ID_FAILURE'\n\nexport const fetchProjectID = (id) => (dispatch) => {\n    dispatch({type: FETCH_PROJECT_ID_START})\n    return axiosWithAuth()\n    .get(`https://kick-starter-clone.herokuapp.com/api/projects/${id}`)\n    .then((res) => {\n        dispatch({type: FETCH_PROJECT_ID_SUCCESS, payload: res.data})\n    })\n    .catch((err) => {\n        dispatch({type: FETCH_PROJECT_ID_FAILURE, payload: err.message})\n    })\n}\n\n// edit project by id\n\nexport const EDIT_PROJECT_START = 'EDIT_PROJECT_START'\nexport const EDIT_PROJECT_SUCCESS = 'EDIT_PROJECT_SUCCESS'\nexport const EDIT_PROJECT_FAILURE = 'EDIT_PROJECT_FAILURE'\n\nexport const editProject = (project) => (dispatch) => {\n    dispatch({type: EDIT_PROJECT_START})\n    return axiosWithAuth()\n    .put(`https://kick-starter-clone.herokuapp.com/api/projects/${project.id}`, project)\n    .then((res) => {\n        dispatch({type: EDIT_PROJECT_SUCCESS, payload: res.data})\n    })\n    .catch((err) => {\n        dispatch({type: EDIT_PROJECT_FAILURE, payload: err.message})\n    })\n}"]},"metadata":{},"sourceType":"module"}