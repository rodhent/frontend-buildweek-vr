{"ast":null,"code":"var _jsxFileName = \"/Users/nova/Documents/lambda/front-end/src/components/FundraiserForm.js\";\nimport React, { useState } from 'react';\nimport { addProj } from '../actions/index';\nimport { connect } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport '../styles/FundraiserForm.css';\n\nconst FundraiserForm = ({\n  addProj,\n  user_id\n}) => {\n  const history = useHistory();\n  const [formValues, setFormValues] = useState({\n    title: '',\n    funding_goal: '',\n    fund_date: '',\n    description: '',\n    user_id: parseInt(localStorage.getItem('id')) // total_funded: '',               \n\n  });\n\n  const onSubmit = e => {\n    e.preventDefault();\n    addProj(formValues);\n    history.push('/dashboard');\n  };\n\n  const handleChange = e => {\n    setFormValues({ ...formValues,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    id: \"fundContainer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"fund-section\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: onSubmit,\n    className: \"fund-form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    className: \"form-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }\n  }, \"Please fill out the information below.\"), /*#__PURE__*/React.createElement(\"label\", {\n    className: \"fund-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    className: \"fund-input\",\n    onChange: handleChange,\n    type: \"text\",\n    name: \"title\",\n    value: formValues.title,\n    placeholder: \"Project Name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"label\", {\n    className: \"fund-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    className: \"fund-input\",\n    onChange: handleChange,\n    type: \"number\",\n    name: \"funding_goal\",\n    value: formValues.funding_goal,\n    placeholder: \"$ Financial goal?\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"label\", {\n    className: \"fund-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    className: \"fund-input\",\n    onChange: handleChange,\n    type: \"text\",\n    id: \"FromDate\",\n    name: \"fund_date\",\n    value: formValues.fund_date,\n    placeholder: \"Goal date? YYYY-MM-DD\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"label\", {\n    className: \"fund-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    className: \"fund-input\",\n    onChange: handleChange,\n    type: \"text\",\n    name: \"description\",\n    value: formValues.description,\n    placeholder: \"Description of your project\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"fund-p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 17\n    }\n  }, \"Your answers will be locked for this campaign and can\\u2019t be changed later.\")), /*#__PURE__*/React.createElement(\"button\", {\n    id: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 17\n    }\n  }, \"Submit\"))));\n};\n\nconst mapStateToProps = state => {\n  return {\n    user_id: state.user_id\n  };\n};\n\nexport default connect(mapStateToProps, {\n  addProj\n})(FundraiserForm);","map":{"version":3,"sources":["/Users/nova/Documents/lambda/front-end/src/components/FundraiserForm.js"],"names":["React","useState","addProj","connect","useHistory","FundraiserForm","user_id","history","formValues","setFormValues","title","funding_goal","fund_date","description","parseInt","localStorage","getItem","onSubmit","e","preventDefault","push","handleChange","target","name","value","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport { addProj } from '../actions/index'\nimport { connect } from 'react-redux'\nimport { useHistory } from 'react-router-dom'\nimport '../styles/FundraiserForm.css'\n\nconst FundraiserForm = ({ addProj, user_id}) => {\n\nconst history = useHistory()\nconst [formValues, setFormValues] = useState({\n        title: '',\n        funding_goal: '',\n        fund_date: '',\n        description: '',\n        user_id: parseInt(localStorage.getItem('id')), \n        // total_funded: '',               \n    })\n\nconst onSubmit = (e) => {\n        e.preventDefault()\n        addProj(formValues)\n        history.push('/dashboard')\n    }\n\nconst handleChange = (e) => {\nsetFormValues({ ...formValues, [e.target.name]: e.target.value })\n\n}\n    return (\n        <div id='fundContainer'>\n        <div className=\"fund-section\">\n            <form onSubmit={onSubmit} className='fund-form'>\n            <h3 className='form-title'>Please fill out the information below.</h3>\n                <label className='fund-label' >  \n                    <input\n                    className='fund-input'\n                    onChange={handleChange}\n                    type='text'\n                    name='title'\n                    value={formValues.title}\n                    placeholder='Project Name'/>\n                </label>\n                <label className='fund-label' >\n                    <input\n                    className='fund-input'\n                    onChange={handleChange}\n                    type='number'\n                    name='funding_goal'\n                    value={formValues.funding_goal}\n                    placeholder='$ Financial goal?'/>\n                </label> \n                <label className='fund-label' >  \n                <input\n                    className='fund-input'\n                    onChange={handleChange}\n                    type='text'\n                    id=\"FromDate\"\n                    name='fund_date'\n                    value={formValues.fund_date}\n                    placeholder='Goal date? YYYY-MM-DD'/>\n                </label> \n                {/* <label className='fund-label' >\n                <input\n                    className='fund-input'\n                    onChange={handleChange}\n                    type='number'\n                    name='total_funded'\n                    value={formValues.total_funded}\n                    placeholder='What is your total funded?'/>\n                </label>  */}\n                <label className='fund-label' >      \n                <input\n                    className='fund-input'\n                    onChange={handleChange}\n                    type='text'\n                    name='description'\n                    value={formValues.description}\n                    placeholder='Description of your project'>\n                </input>\n                </label>\n                <div>\n                <p className='fund-p'>Your answers will be locked for this campaign and can’t be changed later.</p>\n                </div>\n                <button id='submit'>Submit</button>\n            </form>\n        </div>\n        </div> \n    )\n}\n\n\nconst mapStateToProps = (state) => {\n    return {\n        user_id: state.user_id\n     \n    };\n};\n\n\nexport default connect(mapStateToProps, { addProj })(FundraiserForm)\n"]},"metadata":{},"sourceType":"module"}