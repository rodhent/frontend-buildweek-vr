{"ast":null,"code":"var _jsxFileName = \"/Users/nova/Documents/lambda/front-end/src/components/Login.js\";\nimport React, { useEffect, useState } from 'react';\nimport * as yup from 'yup';\nimport formSchema from './loginSchema';\nimport { useHistory } from 'react-router-dom';\nimport { login } from '../actions/index';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport '../styles/login.css';\nimport Navbar from './NavBar';\nconst initialValues = {\n  username: '',\n  password: ''\n};\nconst initialErrors = {\n  username: '',\n  password: ''\n};\nconst submitDisabled = true;\n\nconst LogIn = props => {\n  const [user, setUser] = useState(initialValues);\n  const [error, setError] = useState(initialErrors);\n  const [disabled, setDisabled] = useState(submitDisabled);\n  const history = useHistory();\n\n  const submitHandler = event => {\n    event.preventDefault();\n    const newUser = {\n      username: user.username,\n      password: user.password,\n      email: user.email\n    };\n    props.login({\n      newUser,\n      history\n    });\n  };\n\n  const setUserError = (name, value) => {\n    yup.reach(formSchema, name).validate(value).then(() => setError({ ...error,\n      [name]: ''\n    })).catch(err => {\n      setError({ ...error,\n        [name]: err.errors[0]\n      });\n    });\n  };\n\n  const change = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    setUserError(name, value);\n    setUser({ ...user,\n      [name]: value\n    });\n  };\n\n  useEffect(() => {\n    formSchema.isValid(user).then(valid => {\n      setDisabled(!valid);\n    });\n  }, [user]);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Navbar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    id: \"loginContainer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"formCont\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: submitHandler,\n    className: \"login-form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    className: \"login-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }\n  }, \"Login With SIXR\"), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"login-span\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }\n  }, error.username), /*#__PURE__*/React.createElement(\"label\", {\n    className: \"login-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    className: \"login-input\",\n    placeholder: \"Username or Email\",\n    name: \"username\",\n    type: \"text\",\n    onChange: change,\n    value: user.username,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"login-span\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }\n  }, error.password), /*#__PURE__*/React.createElement(\"label\", {\n    className: \"login-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    className: \"login-input\",\n    placeholder: \"Password\",\n    name: \"password\",\n    type: \"password\",\n    value: user.password,\n    onChange: change,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 27\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }\n  }, error.username, error.password), /*#__PURE__*/React.createElement(\"button\", {\n    id: \"submit\",\n    disabled: disabled,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }\n  }, \"Log In\"), /*#__PURE__*/React.createElement(Link, {\n    to: \"/sign-up\",\n    className: \"link\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }\n  }, \"Do you still need to sign up?\")))));\n};\n\nconst mapStateToProps = state => {\n  return {\n    isLoading: state.isLoading\n  };\n};\n\nexport default connect(mapStateToProps, {\n  login\n})(LogIn);","map":{"version":3,"sources":["/Users/nova/Documents/lambda/front-end/src/components/Login.js"],"names":["React","useEffect","useState","yup","formSchema","useHistory","login","connect","Link","Navbar","initialValues","username","password","initialErrors","submitDisabled","LogIn","props","user","setUser","error","setError","disabled","setDisabled","history","submitHandler","event","preventDefault","newUser","email","setUserError","name","value","reach","validate","then","catch","err","errors","change","target","isValid","valid","mapStateToProps","state","isLoading"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport * as yup from 'yup';\nimport formSchema from './loginSchema';\nimport { useHistory } from 'react-router-dom';\nimport { login } from '../actions/index';\nimport { connect } from 'react-redux'\nimport {Link} from 'react-router-dom';\nimport '../styles/login.css'\nimport Navbar from './NavBar'\n\nconst initialValues = {\n\tusername: '',\n\tpassword: ''\n};\nconst initialErrors = {\n\tusername: '',\n\tpassword: ''\n};\nconst submitDisabled = true;\n\nconst LogIn = (props) => {\n    const [user, setUser] = useState(initialValues);\n    const [error, setError] = useState(initialErrors);\n    const [disabled, setDisabled] = useState(submitDisabled);\n    const history = useHistory()\n\n    const submitHandler = event => {\n        event.preventDefault();\n        const newUser = {\n            username: user.username,\n            password: user.password,\n            email: user.email,\n        }\n        props.login({newUser, history})\n    \n    }\n\n    const setUserError = (name, value) => {\n        yup\n            .reach(formSchema, name)\n            .validate(value)\n\n            .then(() => setError({ ...error, [name]: '' }))\n            .catch((err) => {\n                setError({ ...error, [name]: err.errors[0] })\n            })\n\n\n    }\n\n\n    const change = event => {\n        const { name, value } = event.target\n        setUserError(name, value)\n        setUser({ ...user, [name]: value })\n    }\n\n    useEffect(() => {\n        formSchema.isValid(user).then((valid) => {\n            setDisabled(!valid)\n        })\n    }, [user])\n\n    return (\n        <>\n        <Navbar />\n        <div id='loginContainer'>\n        <div className='formCont'>\n          <form onSubmit={submitHandler} className='login-form'>\n            <h3 className='login-title'>Login With SIXR</h3>\n            <span className='login-span'>{error.username}</span>\n            <label className='login-label'>\n              <input\n              className='login-input' \n              placeholder='Username or Email'\n              name='username'\n              type='text'\n              onChange={change}\n              value={user.username} />\n            </label>\n            <span className='login-span'>{error.password}</span>\n            <label className='login-label'>\n                          <input \n                              className='login-input'\n                              placeholder='Password'\n                              name='password'\n                              type='password'\n                              value={user.password}\n                              onChange={change}\n                          />\n                      </label>\n            <div>\n                {error.username}\n                {error.password}\n            </div>\n            <button id='submit' disabled={disabled}>Log In</button>\n            <Link to='/sign-up' className='link'>Do you still need to sign up?</Link> \n          </form>\n        </div>\n      </div>\n     </> \n    )\n}\nconst mapStateToProps = (state) => {\n    return{\n        isLoading:state.isLoading\n    }\n}\n\n\nexport default connect(mapStateToProps, { login })(LogIn)\n"]},"metadata":{},"sourceType":"module"}